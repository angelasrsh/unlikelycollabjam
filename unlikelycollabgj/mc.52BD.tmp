[gd_scene load_steps=4 format=3 uid="uid://ciarqro0p2atw"]

[ext_resource type="Texture2D" uid="uid://8h8ktlt08gid" path="res://icon.svg" id="1_wf7r8"]

[sub_resource type="GDScript" id="GDScript_83dae"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

# character action variables
var is_falling:= velocity.y > 0.0 and not is_on_floor()
var is_jumping := Input.is_action_just_pressed(\"jump\") and is_on_floor()
var is_idling:= is_on_floor() and is_zero_approx(velocity.x)
	
func _physics_process(delta):
	#print(\"physics process of character is working\")
	player_walk(delta)
	player_jump(delta)

#player_swim(delta):

func player_jump(delta):
		# Add the gravity.
	print(\"jumping?\")
	if not is_on_floor():
		velocity += get_gravity() * delta
		
	# Handle jump.
	if is_jumping:
		print(\"jumping!\")
		velocity.y = JUMP_VELOCITY

	move_and_slide()

		
		
func player_walk(delta):
		# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"move_left\", \"move_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_ejv85"]
height = 90.0

[node name="mc" type="CharacterBody2D"]
script = SubResource("GDScript_83dae")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(0.500002, 0.499998)
scale = Vector2(0.164062, 0.695312)
texture = ExtResource("1_wf7r8")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_ejv85")
